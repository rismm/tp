@startuml
'https://plantuml.com/class-diagram
skinparam classAttributeIconSize 0
skinparam CircledCharacterFontSize 0
skinparam CircledCharacterRadius 0

interface Command
class Ui
class TransactionList
class ProfitCommand
class Parser

ProfitCommand <.. Parser
Command <|. ProfitCommand
Ui <.. ProfitCommand
TransactionList <.. ProfitCommand


interface Command <<interface>> {
    +execute():void
    +isQuit():boolean
}

class ProfitCommand {
    -startDate:LocalDate
    -endDate:LocalDate
    -task:String
    +ProfitCommand()
    +execute():void
    +isQuit():boolean
}

class Ui {
    {static}+printProfit():void
}

class Parser {
    {static}-parseProfitCommand(input:String):ProfitCommand
}

class TransactionList {
    {static}+calculateDay():BigDecimal
    {static}+calculateTotal():BigDecimal
    {static}+calculateRange():BigDecimal
}

note "Some parameters and methods \nomitted for brevity" as n1
@enduml

@startuml
hide footbox
participant "SuperTracker" as SuperTracker <<class>> #f5e3a9
participant ":ProfitCommand" as ProfitCommand #cbf7f4
participant "TransactionList" as TransactionList <<class>> #d5eac2
participant "Ui" as Ui <<class>> #e5c2ea

SuperTracker -> ProfitCommand : execute()
activate ProfitCommand #cbf7f4
alt task is "today"
    ProfitCommand -> TransactionList : calculateToday()
    activate TransactionList #d5eac2
    TransactionList --> ProfitCommand : revenue:BigDecimal
    deactivate TransactionList
    ProfitCommand -> TransactionList : calculateToday()
    activate TransactionList #d5eac2
    TransactionList --> ProfitCommand : expenditure:BigDecimal
    deactivate TransactionList

else task is "total"
    ProfitCommand -> TransactionList : calculateTotal()
    activate TransactionList #d5eac2
    TransactionList --> ProfitCommand : revenue:BigDecimal
    deactivate TransactionList
    ProfitCommand -> TransactionList : calculateTotal()
    activate TransactionList #d5eac2
    TransactionList --> ProfitCommand : expenditure:BigDecimal
    deactivate TransactionList

else task is "day"
    ProfitCommand -> TransactionList : calculateDay()
    activate TransactionList #d5eac2
    TransactionList --> ProfitCommand : revenue:BigDecimal
    deactivate TransactionList
    ProfitCommand -> TransactionList : calculateDay()
    activate TransactionList #d5eac2
    TransactionList --> ProfitCommand : expenditure:BigDecimal
    deactivate TransactionList

else task is "range"
    ProfitCommand -> TransactionList : calculateRange()
    activate TransactionList #d5eac2
    TransactionList --> ProfitCommand : revenue:BigDecimal
    deactivate TransactionList
    ProfitCommand -> TransactionList : calculateRange()
    activate TransactionList #d5eac2
    TransactionList --> ProfitCommand : expenditure:BigDecimal
    deactivate TransactionList
end

note right : some parameters and methods \nomitted for brevity

ProfitCommand -> Ui : printProfit()
activate Ui #e5c2ea
Ui --> ProfitCommand
deactivate Ui

ProfitCommand --> SuperTracker
deactivate ProfitCommand

@enduml